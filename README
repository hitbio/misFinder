misFinder- An unbiased mis-assembly identification tool
============================

misFinder is a tool that aims to identify the assembly errors with high accuracy in an unbiased way and correct these errors at their mis-assembled positions to improve the assembly accuracy for downstream analysis. It combines the information of reference (or close related reference) genome and aligned paired-end reads to the assembled sequence. Structure variation and mis-assembly can be detected by comparing the reference genome and assembled sequence. Different types of assembly errors can then be distinguished from the mis-assembled sequences by analyzing the aligned paired-end reads using multiple features derived from coverage and consistence of insert distance to obtain high confident error calls.

misFinder is based on BLASTN (version 2.2.25+ and higher), and assembly (contigs/scaffolds), genome reference and paired-end reads from Solexa sequencing technology are its input. BLASTN can be downloaded from http://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download, and then the BLASTN command 'blastn' should be added into to PATH or into one of the following directories: /usr/local/bin, /usr/bin, /bin, /usr/local/sbin, /usr/sbin, /sbin, $HOME/bin.

There is a reference configuration file (e.g. subjectsConfig_reference) to configure the reference before running misFinder. Suppose there are multiple chromosomes (or reference segments), and each is stored in a single file, and their paths will be recorded into the configuration file each chromosome per line.

-------------
misFinder command
misFinder can accepte the paired-end reads in fastq or fasta file format. If the paired-end reads are stored interleaved in a single file, e.g. paired_reads.fastq, then the command will be:
$ ./mf all -q scaffolds.fa -s subjectsConfig_reference -f paired_reads.fastq -p 2 -o ../output/

If the paired-end reads are stored into two files, e.g. reads_1.fastq and reads_2.fastq, then the command will be:
$ ./mf all -q scaffolds.fa -s subjectsConfig_reference -f reads_1.fastq reads_2.fastq -p 1 -o ../output/

Then, misFinder will perform the BLASTN alignment, identify the assembly errors and correct assemblies due to structural variations, and then correct the assembly errors at their breakpoints. Finally, the final results will be output into five files, including four files for the identified mis-assembly information and one file for the corrected assemblies:
(1) result_errors:
    The identified assembly errors.
(2) result_sv:
    The correct assemblies due to structural variations.
(3) result_gap:
    The indel caused by gap regions filled by poly_N.
(4) result_warning:
    The warnings produced by misFinder, they may need further checking.
(5) query_cor.fa:
    The corrected assemblies after performing the correction at the breakpoints of assembly errors.

-------------
Compiling misFinder

The binary file can be generated by typing:
./autogen.sh

and the binary file 'mf' will be output into the folder 'bin'.

-------------
Report bugs or give suggestions to zhuxiao.hit@gmail.com.

Thanks for enjoying it.

